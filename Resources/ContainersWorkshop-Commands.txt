2023 Containers Workshop - InterSystems Global Summit
SET OF COMMANDS

------------------

0 - Setup

docker run hello-world

docker pull containers.intersystems.com/intersystems/iris-community:2023.1.0.229.0

docker pull containers.intersystems.com/intersystems/iris-community:2023.2.0.198.0

docker pull containers.intersystems.com/intersystems/webgateway:2023.1.0.229.0

------------------

PART I
1 - Perform Basic Container Operations

1.1.1
docker run --rm busybox echo 'hello world'

1.1.2
docker run busybox ping 8.8.4.4

1.1.4
docker ps

1.1.5
docker ps --all

1.1.6
docker ps --help

1.1.7
docker ps --all --quiet

1.1.8
docker rm <CONTAINER ID>

1.1.9
docker rm --help

1.1.10
docker run busybox echo 'hello world'
docker rm --force $(docker ps --latest --quiet)

--------

1.2.1
docker run -it busybox sh

1.2.2
ls -l

1.2.3
echo 'Hello thereâ€¦' > test.txt

1.2.4
ls -l

1.2.5
exit

1.2.6
docker run -it busybox sh

1.2.7
ls -l

1.2.8
exit

------------------

2 - Build a Container Image

2.1.1
docker run -it busybox sh

2.1.2
touch myfile.test

2.1.3
ls -l

2.1.4
docker ps --all

2.1.5
docker diff <CONTAINER ID>

2.1.6
docker commit <CONTAINER ID> myapp:1.0

2.1.7
docker images

2.1.8
docker run -it my app:1.0 sh
ls -l
exit

------------------

3 - Persist Data with Bind Mounts

3.1.1
docker run -it --name mytest -v "${PWD}/mydata:/mydata" busybox

3.1.2
cd mydata
touch myfile.txt
exit

3.1.3
docker inspect mytest

3.1.4
docker inspect --format='{{json .Mounts}}' mytest

3.1.5
docker rm --force $(docker ps -aq)

3.1.6
ls ./mydata

------------------

4 - Pull and Run InterSystems IRIS Containers

4.1.1
git clone https://github.com/intersystems/Samples-Container-Workshop.git

4.1.2
cd GS2023-Linux
***or***
cd GS2023-Windows

4.1.3
./run.sh
***or***
./run.bat

--------

4.2.1
docker exec -it <CONTAINER ID> iris terminal iris

4.2.2
!pwd

4.2.3
set ^Kilroy="I was here at "_$ZDT($H)

4.2.4
write ^Kilroy

4.2.5
cd durable

4.2.6
ls

--------

4.3.3
docker stop GS2023

4.3.4
docker ps --all

4.3.6
docker images

4.3.7
./run.sh
***or***
./run.bat

4.3.8
docker exec -it GS2023 iris terminal iris

4.3.9
write ^Kilroy

--------

4.4.1
halt

4.4.2
docker logs GS2023

4.4.3
docker logs --tail 5 GS2023

4.4.4
docker logs --follow GS2023

------------------

5 - Create a Container Image via Build Process

5.1.2
var http = require('http');
var handleRequest = function(request, response) {
	response.writeHead(200);
	response.end("Hello World!");
	}
var www = http.createServer(handleRequest);
www.listen(8080);

5.1.4
# Deriving our container from a prebuilt one
FROM node:16-slim
COPY server.js .
EXPOSE 8080
# Run the following default command when the container is run
CMD node server.js

--------

5.2.1
docker build -t service:v1 .

5.2.2
docker images

5.2.3
docker history service:v1

5.2.4
docker run -d --name myservice -p 8080:8080 service:v1

5.2.5
docker ps

5.2.6
curl http://127.0.0.1:8080

5.2.7
docker stop myservice

5.2.8
docker rm myservice

------------------

6 - Use Docker Compose for Multiple Containers

6.1.2
services:
   irisone:
      image: containers.intersystems.com/intersystems/iris-community:2023.1.0.229.0
      hostname: irisone
      ports:
      # 1972 is the SuperServer port by default
      - "9091:1972"
      # 52773 is the web server / management portal port
      - "9092:52773"

   iristwo:
      image: containers.intersystems.com/intersystems/iris-community:2023.1.0.229.0
      hostname: iristwo
      ports:
      # 1972 is the SuperServer port by default
      - "9095:1972"
      # 52773 is the web server / management portal port
      - "9096:52773"


6.1.3
docker-compose up -d

6.1.4
docker ps

6.1.5
docker-compose logs

6.1.6
docker-compose logs --tail 10 --follow

6.1.7
docker-compose down


------------------

PART II
7 - Build Your Own Containerized Application

7.1.1
cd exercise7

7.1.3
FROM containers.intersystems.com/intersystems/iris-community:2023.1.0.229.0
COPY app app
COPY iris.script iris.script
RUN iris start IRIS && iris session IRIS < iris.script && iris stop IRIS quietly
ENV ISC_CPF_MERGE_FILE=$ISC_PACKAGE_INSTALLDIR/merge.cpf
COPY merge.cpf $ISC_PACKAGE_INSTALLDIR

7.1.5
docker build --tag coffee:v1 .

7.1.6
docker run -d --publish 9999:52773 --publish 9998:1972 --volume "${PWD}/durable/docker:/durable" --env ISC_DATA_DIRECTORY=/durable/iris coffee:v1

--------

7.2.1
docker login
Username: gs23containers
Password: containers!!

7.2.4
docker tag coffee:v1 gs23containers/coffee:<YOURNAME>
docker push gs23containers/coffee:<YOURNAME>

7.2.6
docker pull gs23containers/coffee:<YOURNAME>

--------

7.3.2
docker build --tag coffee:v2 .

7.3.3
docker stop <CONTAINER ID>

7.3.4
docker run -d --publish 9999:52773 --publish 9998:1972 --volume "${PWD}/durable/docker:/durable" --env ISC_DATA_DIRECTORY=/durable/iris coffee:v2

7.3.6
docker tag coffee:v2 gs23containers/coffee:<YOURNAME-v2>
docker push gs23containers/coffee:<YOURNAME-v2>

7.3.7
FROM containers.intersystems.com/intersystems/iris-community:2023.2.0.198.0

7.3.8
docker build --tag coffee:v3 .

7.3.9
docker run -d --publish 9999:52773 --publish 9998:1972 --volume "${PWD}/durable/docker:/durable" --env ISC_DATA_DIRECTORY=/durable/iris coffee:v3

--------

7.4.2
version: '3.7'
services:
  # iris container
  iris:
    image: coffee:v3
    init: true
    container_name: iris
    hostname: iris
    ports:
    - "8881:1972"
    environment: 
    - ISC_DATA_DIRECTORY=/iris-shared/durable
    volumes:
    - type: bind
      source: ./durable/compose
      target: /iris-shared

  # web gateway container
  webgateway:
    image: containers.intersystems.com/intersystems/webgateway:2023.1.0.229.0
    init: true
    container_name: webgateway
    hostname: webgateway
    ports:
    - "8882:80"
    - "8883:443"
    environment:
    - ISC_DATA_DIRECTORY=/webgateway-shared/durable
    - ISC_CSP_CONF_FILE=/webgateway-shared/CSP.conf
    - ISC_CSP_INI_FILE=/webgateway-shared/CSP.ini
    volumes:
    - type: bind
      source: ./webgateway
      target: /webgateway-shared

7.4.3
docker-compose up -d

------------------

BONUS - Make Code and Data Changes to Your Application

B.14
select * from Demo.coffeemaker

B.15
insert into Demo.coffeemaker (Name, Brand, CoffeemakerID, Color, Img, NumCups, Price) values ('Summit Coffee', 'GS23', 100, 'Teal', 'img/coffee10.png', 2, 39.95)




 